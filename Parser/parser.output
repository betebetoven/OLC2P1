Terminals unused in grammar

    DIM
    AS
    THEN
    PRINT
    PRINTF
    INTERROGACION
    DOT
    LEFT_BRACKET
    RIGHT_BRACKET
    VECTOR
    PUSH_FRONT
    DOT_PUSH_BACK
    STRUCT
    REMOVE
    MEDIAN
    IOTA
    MEAN
    SIZE
    ATOI
    GET
    '['
    ']'
    '.'


State 48 conflicts: 2 shift/reduce
State 60 conflicts: 1 shift/reduce
State 75 conflicts: 2 shift/reduce
State 79 conflicts: 1 shift/reduce
State 114 conflicts: 1 shift/reduce


Grammar

    0 $accept: s END

    1 s: lSentencia

    2 lSentencia: lSentencia sentencia z
    3           | sentencia z

    4 sentencia: declaracion_var
    5          | asignacion_var
    6          | imprimir
    7          | bloque
    8          | aumento
    9          | decremento
   10          | ciclo_for
   11          | ciclo_while
   12          | ins_if
   13          | escapa
   14          | declaracion_void

   15 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia '}'

   16 ciclo_while: WHILE '(' x ')' '{' lSentencia '}'

   17 ins_if: IF '(' x ')' '{' lSentencia '}'
   18       | IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   19       | IF '(' x ')' '{' lSentencia '}' ELSE ins_if

   20 escapa: BREAK
   21       | CONTINUE
   22       | RETORNO

   23 aumento: INCREMENT ID
   24        | ID INCREMENT

   25 decremento: DECREMENT ID
   26           | ID DECREMENT

   27 imprimir: IMPR '(' lista_Expr ')'

   28 lista_Expr: lista_Expr ',' x
   29           | x

   30 bloque: '{' lSentencia '}'

   31 z: ';'
   32  | %empty

   33 declaracion_void: tipo ID '(' ')' bloque

   34 declaracion_var: tipo ID
   35                | tipo ID '=' x

   36 asignacion_var: ID '=' x

   37 x: cond

   38 cond: cond OR cond
   39     | cond AND cond
   40     | NOT cond
   41     | '(' cond ')'
   42     | expr oprel expr
   43     | expr

   44 oprel: MAYOR
   45      | MENOR
   46      | IGUAL_IGUAL
   47      | MENOR_IGUAL
   48      | MAYOR_IGUAL
   49      | DIFERENTE

   50 expr: expr SUMA expr
   51     | expr MENOS expr
   52     | expr MULTIPLICACION expr
   53     | expr DIVISION expr
   54     | expr MOD expr
   55     | expr EXPONENCIAL expr
   56     | '(' expr ')'
   57     | INCREMENT ID
   58     | ID INCREMENT
   59     | DECREMENT ID
   60     | ID DECREMENT
   61     | MENOS expr
   62     | NUMERO
   63     | ID
   64     | STRING
   65     | FLOAT
   66     | TRUE
   67     | FALSE

   68 tipo: INT
   69     | STR
   70     | FLO
   71     | BOOL
   72     | VOID


Terminals, with rules where they appear

    END (0) 0
    '(' (40) 15 16 17 18 19 27 33 41 56
    ')' (41) 15 16 17 18 19 27 33 41 56
    ',' (44) 28
    '.' (46)
    ';' (59) 31
    '=' (61) 35 36
    '[' (91)
    ']' (93)
    '{' (123) 15 16 17 18 19 30
    '}' (125) 15 16 17 18 19 30
    error (256)
    NUMERO <std::string> (258) 62
    ID <std::string> (259) 23 24 25 26 33 34 35 36 57 58 59 60 63
    STRING <std::string> (260) 64
    INT <std::string> (261) 68
    STR <std::string> (262) 69
    FLOAT <std::string> (263) 65
    FLO <std::string> (264) 70
    BOOL <std::string> (265) 71
    SUMA (266) 50
    MENOS (267) 51 61
    DIM (268)
    AS (269)
    IMPR (270) 27
    MOD (271) 54
    VOID (272) 72
    TRUE (273) 66
    FALSE (274) 67
    AND (275) 39
    NOT (276) 40
    IF (277) 17 18 19
    THEN (278)
    ELSE (279) 18 19
    WHILE (280) 16
    PRINT (281)
    PRINTF (282)
    FOR (283) 15
    MULTIPLICACION (284) 52
    DIVISION (285) 53
    EXPONENCIAL (286) 55
    MENOR_IGUAL (287) 47
    MAYOR_IGUAL (288) 48
    IGUAL_IGUAL (289) 46
    DIFERENTE (290) 49
    MENOR (291) 45
    MAYOR (292) 44
    OR (293) 38
    INTERROGACION (294)
    INCREMENT (295) 23 24 57 58
    DECREMENT (296) 25 26 59 60
    DOT (297)
    LEFT_BRACKET (298)
    RIGHT_BRACKET (299)
    VECTOR (300)
    PUSH_FRONT (301)
    DOT_PUSH_BACK (302)
    STRUCT (303)
    REMOVE (304)
    MEDIAN (305)
    IOTA (306)
    MEAN (307)
    SIZE (308)
    ATOI (309)
    GET (310)
    RETORNO (311) 22
    BREAK (312) 20
    CONTINUE (313) 21
    NEG (314)


Nonterminals, with rules where they appear

    $accept (70)
        on left: 0
    s <QVector<AbstractExpr*>*> (71)
        on left: 1
        on right: 0
    lSentencia <QVector<AbstractExpr*>*> (72)
        on left: 2 3
        on right: 1 2 15 16 17 18 19 30
    sentencia <AbstractExpr*> (73)
        on left: 4 5 6 7 8 9 10 11 12 13 14
        on right: 2 3
    ciclo_for <AbstractExpr*> (74)
        on left: 15
        on right: 10
    ciclo_while <AbstractExpr*> (75)
        on left: 16
        on right: 11
    ins_if <AbstractExpr*> (76)
        on left: 17 18 19
        on right: 12 19
    escapa <AbstractExpr*> (77)
        on left: 20 21 22
        on right: 13
    aumento <AbstractExpr*> (78)
        on left: 23 24
        on right: 8 15
    decremento <AbstractExpr*> (79)
        on left: 25 26
        on right: 9
    imprimir <NT_Imprimir*> (80)
        on left: 27
        on right: 6
    lista_Expr <AbstractExpr*> (81)
        on left: 28 29
        on right: 27 28
    bloque <AbstractExpr*> (82)
        on left: 30
        on right: 7 33
    z (83)
        on left: 31 32
        on right: 2 3 15
    declaracion_void <AbstractExpr*> (84)
        on left: 33
        on right: 14
    declaracion_var <AbstractExpr*> (85)
        on left: 34 35
        on right: 4 15
    asignacion_var <AbstractExpr*> (86)
        on left: 36
        on right: 5
    x <AbstractExpr*> (87)
        on left: 37
        on right: 15 16 17 18 19 28 29 35 36
    cond <AbstractExpr*> (88)
        on left: 38 39 40 41 42 43
        on right: 37 38 39 40 41
    oprel <std::string> (89)
        on left: 44 45 46 47 48 49
        on right: 42
    expr <AbstractExpr*> (90)
        on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
        on right: 42 43 50 51 52 53 54 55 56 61
    tipo <AbstractExpr*> (91)
        on left: 68 69 70 71 72
        on right: 33 34 35


State 0

    0 $accept: . s END

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16

    s                 go to state 17
    lSentencia        go to state 18
    sentencia         go to state 19
    ciclo_for         go to state 20
    ciclo_while       go to state 21
    ins_if            go to state 22
    escapa            go to state 23
    aumento           go to state 24
    decremento        go to state 25
    imprimir          go to state 26
    bloque            go to state 27
    declaracion_void  go to state 28
    declaracion_var   go to state 29
    asignacion_var    go to state 30
    tipo              go to state 31


State 1

   24 aumento: ID . INCREMENT
   26 decremento: ID . DECREMENT
   36 asignacion_var: ID . '=' x

    INCREMENT  shift, and go to state 32
    DECREMENT  shift, and go to state 33
    '='        shift, and go to state 34


State 2

   68 tipo: INT .

    $default  reduce using rule 68 (tipo)


State 3

   69 tipo: STR .

    $default  reduce using rule 69 (tipo)


State 4

   70 tipo: FLO .

    $default  reduce using rule 70 (tipo)


State 5

   71 tipo: BOOL .

    $default  reduce using rule 71 (tipo)


State 6

   27 imprimir: IMPR . '(' lista_Expr ')'

    '('  shift, and go to state 35


State 7

   72 tipo: VOID .

    $default  reduce using rule 72 (tipo)


State 8

   17 ins_if: IF . '(' x ')' '{' lSentencia '}'
   18       | IF . '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   19       | IF . '(' x ')' '{' lSentencia '}' ELSE ins_if

    '('  shift, and go to state 36


State 9

   16 ciclo_while: WHILE . '(' x ')' '{' lSentencia '}'

    '('  shift, and go to state 37


State 10

   15 ciclo_for: FOR . '(' declaracion_var z x z aumento ')' '{' lSentencia '}'

    '('  shift, and go to state 38


State 11

   23 aumento: INCREMENT . ID

    ID  shift, and go to state 39


State 12

   25 decremento: DECREMENT . ID

    ID  shift, and go to state 40


State 13

   22 escapa: RETORNO .

    $default  reduce using rule 22 (escapa)


State 14

   20 escapa: BREAK .

    $default  reduce using rule 20 (escapa)


State 15

   21 escapa: CONTINUE .

    $default  reduce using rule 21 (escapa)


State 16

   30 bloque: '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16

    lSentencia        go to state 41
    sentencia         go to state 19
    ciclo_for         go to state 20
    ciclo_while       go to state 21
    ins_if            go to state 22
    escapa            go to state 23
    aumento           go to state 24
    decremento        go to state 25
    imprimir          go to state 26
    bloque            go to state 27
    declaracion_void  go to state 28
    declaracion_var   go to state 29
    asignacion_var    go to state 30
    tipo              go to state 31


State 17

    0 $accept: s . END

    END  shift, and go to state 42


State 18

    1 s: lSentencia .
    2 lSentencia: lSentencia . sentencia z

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16

    $default  reduce using rule 1 (s)

    sentencia         go to state 43
    ciclo_for         go to state 20
    ciclo_while       go to state 21
    ins_if            go to state 22
    escapa            go to state 23
    aumento           go to state 24
    decremento        go to state 25
    imprimir          go to state 26
    bloque            go to state 27
    declaracion_void  go to state 28
    declaracion_var   go to state 29
    asignacion_var    go to state 30
    tipo              go to state 31


State 19

    3 lSentencia: sentencia . z

    ';'  shift, and go to state 44

    $default  reduce using rule 32 (z)

    z  go to state 45


State 20

   10 sentencia: ciclo_for .

    $default  reduce using rule 10 (sentencia)


State 21

   11 sentencia: ciclo_while .

    $default  reduce using rule 11 (sentencia)


State 22

   12 sentencia: ins_if .

    $default  reduce using rule 12 (sentencia)


State 23

   13 sentencia: escapa .

    $default  reduce using rule 13 (sentencia)


State 24

    8 sentencia: aumento .

    $default  reduce using rule 8 (sentencia)


State 25

    9 sentencia: decremento .

    $default  reduce using rule 9 (sentencia)


State 26

    6 sentencia: imprimir .

    $default  reduce using rule 6 (sentencia)


State 27

    7 sentencia: bloque .

    $default  reduce using rule 7 (sentencia)


State 28

   14 sentencia: declaracion_void .

    $default  reduce using rule 14 (sentencia)


State 29

    4 sentencia: declaracion_var .

    $default  reduce using rule 4 (sentencia)


State 30

    5 sentencia: asignacion_var .

    $default  reduce using rule 5 (sentencia)


State 31

   33 declaracion_void: tipo . ID '(' ')' bloque
   34 declaracion_var: tipo . ID
   35                | tipo . ID '=' x

    ID  shift, and go to state 46


State 32

   24 aumento: ID INCREMENT .

    $default  reduce using rule 24 (aumento)


State 33

   26 decremento: ID DECREMENT .

    $default  reduce using rule 26 (decremento)


State 34

   36 asignacion_var: ID '=' . x

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    x     go to state 58
    cond  go to state 59
    expr  go to state 60


State 35

   27 imprimir: IMPR '(' . lista_Expr ')'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    lista_Expr  go to state 61
    x           go to state 62
    cond        go to state 59
    expr        go to state 60


State 36

   17 ins_if: IF '(' . x ')' '{' lSentencia '}'
   18       | IF '(' . x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   19       | IF '(' . x ')' '{' lSentencia '}' ELSE ins_if

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    x     go to state 63
    cond  go to state 59
    expr  go to state 60


State 37

   16 ciclo_while: WHILE '(' . x ')' '{' lSentencia '}'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    x     go to state 64
    cond  go to state 59
    expr  go to state 60


State 38

   15 ciclo_for: FOR '(' . declaracion_var z x z aumento ')' '{' lSentencia '}'

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7

    declaracion_var  go to state 65
    tipo             go to state 66


State 39

   23 aumento: INCREMENT ID .

    $default  reduce using rule 23 (aumento)


State 40

   25 decremento: DECREMENT ID .

    $default  reduce using rule 25 (decremento)


State 41

    2 lSentencia: lSentencia . sentencia z
   30 bloque: '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16
    '}'        shift, and go to state 67

    sentencia         go to state 43
    ciclo_for         go to state 20
    ciclo_while       go to state 21
    ins_if            go to state 22
    escapa            go to state 23
    aumento           go to state 24
    decremento        go to state 25
    imprimir          go to state 26
    bloque            go to state 27
    declaracion_void  go to state 28
    declaracion_var   go to state 29
    asignacion_var    go to state 30
    tipo              go to state 31


State 42

    0 $accept: s END .

    $default  accept


State 43

    2 lSentencia: lSentencia sentencia . z

    ';'  shift, and go to state 44

    $default  reduce using rule 32 (z)

    z  go to state 68


State 44

   31 z: ';' .

    $default  reduce using rule 31 (z)


State 45

    3 lSentencia: sentencia z .

    $default  reduce using rule 3 (lSentencia)


State 46

   33 declaracion_void: tipo ID . '(' ')' bloque
   34 declaracion_var: tipo ID .
   35                | tipo ID . '=' x

    '('  shift, and go to state 69
    '='  shift, and go to state 70

    $default  reduce using rule 34 (declaracion_var)


State 47

   62 expr: NUMERO .

    $default  reduce using rule 62 (expr)


State 48

   58 expr: ID . INCREMENT
   60     | ID . DECREMENT
   63     | ID .

    INCREMENT  shift, and go to state 71
    DECREMENT  shift, and go to state 72

    INCREMENT  [reduce using rule 63 (expr)]
    DECREMENT  [reduce using rule 63 (expr)]
    $default   reduce using rule 63 (expr)


State 49

   64 expr: STRING .

    $default  reduce using rule 64 (expr)


State 50

   65 expr: FLOAT .

    $default  reduce using rule 65 (expr)


State 51

   61 expr: MENOS . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 73

    expr  go to state 74


State 52

   66 expr: TRUE .

    $default  reduce using rule 66 (expr)


State 53

   67 expr: FALSE .

    $default  reduce using rule 67 (expr)


State 54

   40 cond: NOT . cond

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    cond  go to state 75
    expr  go to state 60


State 55

   57 expr: INCREMENT . ID

    ID  shift, and go to state 76


State 56

   59 expr: DECREMENT . ID

    ID  shift, and go to state 77


State 57

   41 cond: '(' . cond ')'
   56 expr: '(' . expr ')'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    cond  go to state 78
    expr  go to state 79


State 58

   36 asignacion_var: ID '=' x .

    $default  reduce using rule 36 (asignacion_var)


State 59

   37 x: cond .
   38 cond: cond . OR cond
   39     | cond . AND cond

    AND  shift, and go to state 80
    OR   shift, and go to state 81

    $default  reduce using rule 37 (x)


State 60

   42 cond: expr . oprel expr
   43     | expr .
   50 expr: expr . SUMA expr
   51     | expr . MENOS expr
   52     | expr . MULTIPLICACION expr
   53     | expr . DIVISION expr
   54     | expr . MOD expr
   55     | expr . EXPONENCIAL expr

    SUMA            shift, and go to state 82
    MENOS           shift, and go to state 83
    MOD             shift, and go to state 84
    MULTIPLICACION  shift, and go to state 85
    DIVISION        shift, and go to state 86
    EXPONENCIAL     shift, and go to state 87
    MENOR_IGUAL     shift, and go to state 88
    MAYOR_IGUAL     shift, and go to state 89
    IGUAL_IGUAL     shift, and go to state 90
    DIFERENTE       shift, and go to state 91
    MENOR           shift, and go to state 92
    MAYOR           shift, and go to state 93

    MENOS     [reduce using rule 43 (cond)]
    $default  reduce using rule 43 (cond)

    oprel  go to state 94


State 61

   27 imprimir: IMPR '(' lista_Expr . ')'
   28 lista_Expr: lista_Expr . ',' x

    ')'  shift, and go to state 95
    ','  shift, and go to state 96


State 62

   29 lista_Expr: x .

    $default  reduce using rule 29 (lista_Expr)


State 63

   17 ins_if: IF '(' x . ')' '{' lSentencia '}'
   18       | IF '(' x . ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   19       | IF '(' x . ')' '{' lSentencia '}' ELSE ins_if

    ')'  shift, and go to state 97


State 64

   16 ciclo_while: WHILE '(' x . ')' '{' lSentencia '}'

    ')'  shift, and go to state 98


State 65

   15 ciclo_for: FOR '(' declaracion_var . z x z aumento ')' '{' lSentencia '}'

    ';'  shift, and go to state 44

    $default  reduce using rule 32 (z)

    z  go to state 99


State 66

   34 declaracion_var: tipo . ID
   35                | tipo . ID '=' x

    ID  shift, and go to state 100


State 67

   30 bloque: '{' lSentencia '}' .

    $default  reduce using rule 30 (bloque)


State 68

    2 lSentencia: lSentencia sentencia z .

    $default  reduce using rule 2 (lSentencia)


State 69

   33 declaracion_void: tipo ID '(' . ')' bloque

    ')'  shift, and go to state 101


State 70

   35 declaracion_var: tipo ID '=' . x

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    x     go to state 102
    cond  go to state 59
    expr  go to state 60


State 71

   58 expr: ID INCREMENT .

    $default  reduce using rule 58 (expr)


State 72

   60 expr: ID DECREMENT .

    $default  reduce using rule 60 (expr)


State 73

   56 expr: '(' . expr ')'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 73

    expr  go to state 103


State 74

   50 expr: expr . SUMA expr
   51     | expr . MENOS expr
   52     | expr . MULTIPLICACION expr
   53     | expr . DIVISION expr
   54     | expr . MOD expr
   55     | expr . EXPONENCIAL expr
   61     | MENOS expr .

    EXPONENCIAL  shift, and go to state 87

    $default  reduce using rule 61 (expr)


State 75

   38 cond: cond . OR cond
   39     | cond . AND cond
   40     | NOT cond .

    AND  shift, and go to state 80
    OR   shift, and go to state 81

    AND       [reduce using rule 40 (cond)]
    OR        [reduce using rule 40 (cond)]
    $default  reduce using rule 40 (cond)


State 76

   57 expr: INCREMENT ID .

    $default  reduce using rule 57 (expr)


State 77

   59 expr: DECREMENT ID .

    $default  reduce using rule 59 (expr)


State 78

   38 cond: cond . OR cond
   39     | cond . AND cond
   41     | '(' cond . ')'

    AND  shift, and go to state 80
    OR   shift, and go to state 81
    ')'  shift, and go to state 104


State 79

   42 cond: expr . oprel expr
   43     | expr .
   50 expr: expr . SUMA expr
   51     | expr . MENOS expr
   52     | expr . MULTIPLICACION expr
   53     | expr . DIVISION expr
   54     | expr . MOD expr
   55     | expr . EXPONENCIAL expr
   56     | '(' expr . ')'

    SUMA            shift, and go to state 82
    MENOS           shift, and go to state 83
    MOD             shift, and go to state 84
    MULTIPLICACION  shift, and go to state 85
    DIVISION        shift, and go to state 86
    EXPONENCIAL     shift, and go to state 87
    MENOR_IGUAL     shift, and go to state 88
    MAYOR_IGUAL     shift, and go to state 89
    IGUAL_IGUAL     shift, and go to state 90
    DIFERENTE       shift, and go to state 91
    MENOR           shift, and go to state 92
    MAYOR           shift, and go to state 93
    ')'             shift, and go to state 105

    ')'       [reduce using rule 43 (cond)]
    $default  reduce using rule 43 (cond)

    oprel  go to state 94


State 80

   39 cond: cond AND . cond

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    cond  go to state 106
    expr  go to state 60


State 81

   38 cond: cond OR . cond

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    cond  go to state 107
    expr  go to state 60


State 82

   50 expr: expr SUMA . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 73

    expr  go to state 108


State 83

   51 expr: expr MENOS . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 73

    expr  go to state 109


State 84

   54 expr: expr MOD . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 73

    expr  go to state 110


State 85

   52 expr: expr MULTIPLICACION . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 73

    expr  go to state 111


State 86

   53 expr: expr DIVISION . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 73

    expr  go to state 112


State 87

   55 expr: expr EXPONENCIAL . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 73

    expr  go to state 113


State 88

   47 oprel: MENOR_IGUAL .

    $default  reduce using rule 47 (oprel)


State 89

   48 oprel: MAYOR_IGUAL .

    $default  reduce using rule 48 (oprel)


State 90

   46 oprel: IGUAL_IGUAL .

    $default  reduce using rule 46 (oprel)


State 91

   49 oprel: DIFERENTE .

    $default  reduce using rule 49 (oprel)


State 92

   45 oprel: MENOR .

    $default  reduce using rule 45 (oprel)


State 93

   44 oprel: MAYOR .

    $default  reduce using rule 44 (oprel)


State 94

   42 cond: expr oprel . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 73

    expr  go to state 114


State 95

   27 imprimir: IMPR '(' lista_Expr ')' .

    $default  reduce using rule 27 (imprimir)


State 96

   28 lista_Expr: lista_Expr ',' . x

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    x     go to state 115
    cond  go to state 59
    expr  go to state 60


State 97

   17 ins_if: IF '(' x ')' . '{' lSentencia '}'
   18       | IF '(' x ')' . '{' lSentencia '}' ELSE '{' lSentencia '}'
   19       | IF '(' x ')' . '{' lSentencia '}' ELSE ins_if

    '{'  shift, and go to state 116


State 98

   16 ciclo_while: WHILE '(' x ')' . '{' lSentencia '}'

    '{'  shift, and go to state 117


State 99

   15 ciclo_for: FOR '(' declaracion_var z . x z aumento ')' '{' lSentencia '}'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    x     go to state 118
    cond  go to state 59
    expr  go to state 60


State 100

   34 declaracion_var: tipo ID .
   35                | tipo ID . '=' x

    '='  shift, and go to state 70

    $default  reduce using rule 34 (declaracion_var)


State 101

   33 declaracion_void: tipo ID '(' ')' . bloque

    '{'  shift, and go to state 16

    bloque  go to state 119


State 102

   35 declaracion_var: tipo ID '=' x .

    $default  reduce using rule 35 (declaracion_var)


State 103

   50 expr: expr . SUMA expr
   51     | expr . MENOS expr
   52     | expr . MULTIPLICACION expr
   53     | expr . DIVISION expr
   54     | expr . MOD expr
   55     | expr . EXPONENCIAL expr
   56     | '(' expr . ')'

    SUMA            shift, and go to state 82
    MENOS           shift, and go to state 83
    MOD             shift, and go to state 84
    MULTIPLICACION  shift, and go to state 85
    DIVISION        shift, and go to state 86
    EXPONENCIAL     shift, and go to state 87
    ')'             shift, and go to state 105


State 104

   41 cond: '(' cond ')' .

    $default  reduce using rule 41 (cond)


State 105

   56 expr: '(' expr ')' .

    $default  reduce using rule 56 (expr)


State 106

   38 cond: cond . OR cond
   39     | cond . AND cond
   39     | cond AND cond .

    $default  reduce using rule 39 (cond)


State 107

   38 cond: cond . OR cond
   38     | cond OR cond .
   39     | cond . AND cond

    AND  shift, and go to state 80

    $default  reduce using rule 38 (cond)


State 108

   50 expr: expr . SUMA expr
   50     | expr SUMA expr .
   51     | expr . MENOS expr
   52     | expr . MULTIPLICACION expr
   53     | expr . DIVISION expr
   54     | expr . MOD expr
   55     | expr . EXPONENCIAL expr

    MOD             shift, and go to state 84
    MULTIPLICACION  shift, and go to state 85
    DIVISION        shift, and go to state 86
    EXPONENCIAL     shift, and go to state 87

    $default  reduce using rule 50 (expr)


State 109

   50 expr: expr . SUMA expr
   51     | expr . MENOS expr
   51     | expr MENOS expr .
   52     | expr . MULTIPLICACION expr
   53     | expr . DIVISION expr
   54     | expr . MOD expr
   55     | expr . EXPONENCIAL expr

    MOD             shift, and go to state 84
    MULTIPLICACION  shift, and go to state 85
    DIVISION        shift, and go to state 86
    EXPONENCIAL     shift, and go to state 87

    $default  reduce using rule 51 (expr)


State 110

   50 expr: expr . SUMA expr
   51     | expr . MENOS expr
   52     | expr . MULTIPLICACION expr
   53     | expr . DIVISION expr
   54     | expr . MOD expr
   54     | expr MOD expr .
   55     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 87

    $default  reduce using rule 54 (expr)


State 111

   50 expr: expr . SUMA expr
   51     | expr . MENOS expr
   52     | expr . MULTIPLICACION expr
   52     | expr MULTIPLICACION expr .
   53     | expr . DIVISION expr
   54     | expr . MOD expr
   55     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 87

    $default  reduce using rule 52 (expr)


State 112

   50 expr: expr . SUMA expr
   51     | expr . MENOS expr
   52     | expr . MULTIPLICACION expr
   53     | expr . DIVISION expr
   53     | expr DIVISION expr .
   54     | expr . MOD expr
   55     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 87

    $default  reduce using rule 53 (expr)


State 113

   50 expr: expr . SUMA expr
   51     | expr . MENOS expr
   52     | expr . MULTIPLICACION expr
   53     | expr . DIVISION expr
   54     | expr . MOD expr
   55     | expr . EXPONENCIAL expr
   55     | expr EXPONENCIAL expr .

    EXPONENCIAL  shift, and go to state 87

    $default  reduce using rule 55 (expr)


State 114

   42 cond: expr oprel expr .
   50 expr: expr . SUMA expr
   51     | expr . MENOS expr
   52     | expr . MULTIPLICACION expr
   53     | expr . DIVISION expr
   54     | expr . MOD expr
   55     | expr . EXPONENCIAL expr

    SUMA            shift, and go to state 82
    MENOS           shift, and go to state 83
    MOD             shift, and go to state 84
    MULTIPLICACION  shift, and go to state 85
    DIVISION        shift, and go to state 86
    EXPONENCIAL     shift, and go to state 87

    MENOS     [reduce using rule 42 (cond)]
    $default  reduce using rule 42 (cond)


State 115

   28 lista_Expr: lista_Expr ',' x .

    $default  reduce using rule 28 (lista_Expr)


State 116

   17 ins_if: IF '(' x ')' '{' . lSentencia '}'
   18       | IF '(' x ')' '{' . lSentencia '}' ELSE '{' lSentencia '}'
   19       | IF '(' x ')' '{' . lSentencia '}' ELSE ins_if

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16

    lSentencia        go to state 120
    sentencia         go to state 19
    ciclo_for         go to state 20
    ciclo_while       go to state 21
    ins_if            go to state 22
    escapa            go to state 23
    aumento           go to state 24
    decremento        go to state 25
    imprimir          go to state 26
    bloque            go to state 27
    declaracion_void  go to state 28
    declaracion_var   go to state 29
    asignacion_var    go to state 30
    tipo              go to state 31


State 117

   16 ciclo_while: WHILE '(' x ')' '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16

    lSentencia        go to state 121
    sentencia         go to state 19
    ciclo_for         go to state 20
    ciclo_while       go to state 21
    ins_if            go to state 22
    escapa            go to state 23
    aumento           go to state 24
    decremento        go to state 25
    imprimir          go to state 26
    bloque            go to state 27
    declaracion_void  go to state 28
    declaracion_var   go to state 29
    asignacion_var    go to state 30
    tipo              go to state 31


State 118

   15 ciclo_for: FOR '(' declaracion_var z x . z aumento ')' '{' lSentencia '}'

    ';'  shift, and go to state 44

    $default  reduce using rule 32 (z)

    z  go to state 122


State 119

   33 declaracion_void: tipo ID '(' ')' bloque .

    $default  reduce using rule 33 (declaracion_void)


State 120

    2 lSentencia: lSentencia . sentencia z
   17 ins_if: IF '(' x ')' '{' lSentencia . '}'
   18       | IF '(' x ')' '{' lSentencia . '}' ELSE '{' lSentencia '}'
   19       | IF '(' x ')' '{' lSentencia . '}' ELSE ins_if

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16
    '}'        shift, and go to state 123

    sentencia         go to state 43
    ciclo_for         go to state 20
    ciclo_while       go to state 21
    ins_if            go to state 22
    escapa            go to state 23
    aumento           go to state 24
    decremento        go to state 25
    imprimir          go to state 26
    bloque            go to state 27
    declaracion_void  go to state 28
    declaracion_var   go to state 29
    asignacion_var    go to state 30
    tipo              go to state 31


State 121

    2 lSentencia: lSentencia . sentencia z
   16 ciclo_while: WHILE '(' x ')' '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16
    '}'        shift, and go to state 124

    sentencia         go to state 43
    ciclo_for         go to state 20
    ciclo_while       go to state 21
    ins_if            go to state 22
    escapa            go to state 23
    aumento           go to state 24
    decremento        go to state 25
    imprimir          go to state 26
    bloque            go to state 27
    declaracion_void  go to state 28
    declaracion_var   go to state 29
    asignacion_var    go to state 30
    tipo              go to state 31


State 122

   15 ciclo_for: FOR '(' declaracion_var z x z . aumento ')' '{' lSentencia '}'

    ID         shift, and go to state 125
    INCREMENT  shift, and go to state 11

    aumento  go to state 126


State 123

   17 ins_if: IF '(' x ')' '{' lSentencia '}' .
   18       | IF '(' x ')' '{' lSentencia '}' . ELSE '{' lSentencia '}'
   19       | IF '(' x ')' '{' lSentencia '}' . ELSE ins_if

    ELSE  shift, and go to state 127

    $default  reduce using rule 17 (ins_if)


State 124

   16 ciclo_while: WHILE '(' x ')' '{' lSentencia '}' .

    $default  reduce using rule 16 (ciclo_while)


State 125

   24 aumento: ID . INCREMENT

    INCREMENT  shift, and go to state 32


State 126

   15 ciclo_for: FOR '(' declaracion_var z x z aumento . ')' '{' lSentencia '}'

    ')'  shift, and go to state 128


State 127

   18 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE . '{' lSentencia '}'
   19       | IF '(' x ')' '{' lSentencia '}' ELSE . ins_if

    IF   shift, and go to state 8
    '{'  shift, and go to state 129

    ins_if  go to state 130


State 128

   15 ciclo_for: FOR '(' declaracion_var z x z aumento ')' . '{' lSentencia '}'

    '{'  shift, and go to state 131


State 129

   18 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16

    lSentencia        go to state 132
    sentencia         go to state 19
    ciclo_for         go to state 20
    ciclo_while       go to state 21
    ins_if            go to state 22
    escapa            go to state 23
    aumento           go to state 24
    decremento        go to state 25
    imprimir          go to state 26
    bloque            go to state 27
    declaracion_void  go to state 28
    declaracion_var   go to state 29
    asignacion_var    go to state 30
    tipo              go to state 31


State 130

   19 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE ins_if .

    $default  reduce using rule 19 (ins_if)


State 131

   15 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16

    lSentencia        go to state 133
    sentencia         go to state 19
    ciclo_for         go to state 20
    ciclo_while       go to state 21
    ins_if            go to state 22
    escapa            go to state 23
    aumento           go to state 24
    decremento        go to state 25
    imprimir          go to state 26
    bloque            go to state 27
    declaracion_void  go to state 28
    declaracion_var   go to state 29
    asignacion_var    go to state 30
    tipo              go to state 31


State 132

    2 lSentencia: lSentencia . sentencia z
   18 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16
    '}'        shift, and go to state 134

    sentencia         go to state 43
    ciclo_for         go to state 20
    ciclo_while       go to state 21
    ins_if            go to state 22
    escapa            go to state 23
    aumento           go to state 24
    decremento        go to state 25
    imprimir          go to state 26
    bloque            go to state 27
    declaracion_void  go to state 28
    declaracion_var   go to state 29
    asignacion_var    go to state 30
    tipo              go to state 31


State 133

    2 lSentencia: lSentencia . sentencia z
   15 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16
    '}'        shift, and go to state 135

    sentencia         go to state 43
    ciclo_for         go to state 20
    ciclo_while       go to state 21
    ins_if            go to state 22
    escapa            go to state 23
    aumento           go to state 24
    decremento        go to state 25
    imprimir          go to state 26
    bloque            go to state 27
    declaracion_void  go to state 28
    declaracion_var   go to state 29
    asignacion_var    go to state 30
    tipo              go to state 31


State 134

   18 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}' .

    $default  reduce using rule 18 (ins_if)


State 135

   15 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia '}' .

    $default  reduce using rule 15 (ciclo_for)
