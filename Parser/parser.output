Nonterminals useless in grammar

    lista_Expr


Terminals unused in grammar

    DIM
    THEN
    PRINT
    PRINTF
    INTERROGACION
    DOT
    LEFT_BRACKET
    RIGHT_BRACKET
    VECTOR
    PUSH_FRONT
    DOT_PUSH_BACK
    STRUCT
    REMOVE
    MEDIAN
    IOTA
    MEAN
    SIZE
    ATOI
    GET
    '['
    ']'
    '.'
    ','


Rules useless in grammar

   67 lista_Expr: lista_Expr ',' x
   68           | x


State 46 conflicts: 2 shift/reduce
State 58 conflicts: 1 shift/reduce
State 71 conflicts: 2 shift/reduce
State 75 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce


Grammar

    0 $accept: s END

    1 s: lSentencia

    2 lSentencia: lSentencia sentencia z
    3           | sentencia z

    4 sentencia: declaracion_var
    5          | asignacion_var
    6          | imprimir
    7          | bloque
    8          | aumento
    9          | decremento
   10          | ciclo_for
   11          | ciclo_while
   12          | ins_if
   13          | escapa

   14 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia '}'

   15 ciclo_while: WHILE '(' x ')' '{' lSentencia '}'

   16 ins_if: IF '(' x ')' '{' lSentencia '}'
   17       | IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   18       | IF '(' x ')' '{' lSentencia '}' ELSE ins_if

   19 escapa: BREAK
   20       | CONTINUE
   21       | RETORNO

   22 aumento: INCREMENT ID
   23        | ID INCREMENT

   24 decremento: DECREMENT ID
   25           | ID DECREMENT

   26 imprimir: IMPR '(' x ')'

   27 bloque: '{' lSentencia '}'

   28 z: ';'
   29  | %empty

   30 declaracion_var: ID AS tipo
   31                | ID AS tipo '=' x

   32 asignacion_var: ID '=' x

   33 x: cond

   34 cond: cond OR cond
   35     | cond AND cond
   36     | NOT cond
   37     | '(' cond ')'
   38     | expr oprel expr
   39     | expr

   40 oprel: MAYOR
   41      | MENOR
   42      | IGUAL_IGUAL
   43      | MENOR_IGUAL
   44      | MAYOR_IGUAL
   45      | DIFERENTE

   46 expr: expr SUMA expr
   47     | expr MENOS expr
   48     | expr MULTIPLICACION expr
   49     | expr DIVISION expr
   50     | expr EXPONENCIAL expr
   51     | '(' expr ')'
   52     | INCREMENT ID
   53     | ID INCREMENT
   54     | DECREMENT ID
   55     | ID DECREMENT
   56     | MENOS expr
   57     | NUMERO
   58     | ID
   59     | STRING
   60     | FLOAT
   61     | TRUE
   62     | FALSE

   63 tipo: INT
   64     | STR
   65     | FLO
   66     | BOOL


Terminals, with rules where they appear

    END (0) 0
    '(' (40) 14 15 16 17 18 26 37 51
    ')' (41) 14 15 16 17 18 26 37 51
    ',' (44)
    '.' (46)
    ';' (59) 28
    '=' (61) 31 32
    '[' (91)
    ']' (93)
    '{' (123) 14 15 16 17 18 27
    '}' (125) 14 15 16 17 18 27
    error (256)
    NUMERO <std::string> (258) 57
    ID <std::string> (259) 22 23 24 25 30 31 32 52 53 54 55 58
    STRING <std::string> (260) 59
    INT <std::string> (261) 63
    STR <std::string> (262) 64
    FLOAT <std::string> (263) 60
    FLO <std::string> (264) 65
    BOOL <std::string> (265) 66
    SUMA (266) 46
    MENOS (267) 47 56
    DIM (268)
    AS (269) 30 31
    IMPR (270) 26
    TRUE (271) 61
    FALSE (272) 62
    AND (273) 35
    NOT (274) 36
    IF (275) 16 17 18
    THEN (276)
    ELSE (277) 17 18
    WHILE (278) 15
    PRINT (279)
    PRINTF (280)
    FOR (281) 14
    MULTIPLICACION (282) 48
    DIVISION (283) 49
    EXPONENCIAL (284) 50
    MENOR_IGUAL (285) 43
    MAYOR_IGUAL (286) 44
    IGUAL_IGUAL (287) 42
    DIFERENTE (288) 45
    MENOR (289) 41
    MAYOR (290) 40
    OR (291) 34
    INTERROGACION (292)
    INCREMENT (293) 22 23 52 53
    DECREMENT (294) 24 25 54 55
    DOT (295)
    LEFT_BRACKET (296)
    RIGHT_BRACKET (297)
    VECTOR (298)
    PUSH_FRONT (299)
    DOT_PUSH_BACK (300)
    STRUCT (301)
    REMOVE (302)
    MEDIAN (303)
    IOTA (304)
    MEAN (305)
    SIZE (306)
    ATOI (307)
    GET (308)
    RETORNO (309) 21
    BREAK (310) 19
    CONTINUE (311) 20
    NEG (312)


Nonterminals, with rules where they appear

    $accept (68)
        on left: 0
    s <QVector<AbstractExpr*>*> (69)
        on left: 1
        on right: 0
    lSentencia <QVector<AbstractExpr*>*> (70)
        on left: 2 3
        on right: 1 2 14 15 16 17 18 27
    sentencia <AbstractExpr*> (71)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 2 3
    ciclo_for <AbstractExpr*> (72)
        on left: 14
        on right: 10
    ciclo_while <AbstractExpr*> (73)
        on left: 15
        on right: 11
    ins_if <AbstractExpr*> (74)
        on left: 16 17 18
        on right: 12 18
    escapa <AbstractExpr*> (75)
        on left: 19 20 21
        on right: 13
    aumento <AbstractExpr*> (76)
        on left: 22 23
        on right: 8 14
    decremento <AbstractExpr*> (77)
        on left: 24 25
        on right: 9
    imprimir <NT_Imprimir*> (78)
        on left: 26
        on right: 6
    bloque <AbstractExpr*> (79)
        on left: 27
        on right: 7
    z (80)
        on left: 28 29
        on right: 2 3 14
    declaracion_var <AbstractExpr*> (81)
        on left: 30 31
        on right: 4 14
    asignacion_var <AbstractExpr*> (82)
        on left: 32
        on right: 5
    x <AbstractExpr*> (83)
        on left: 33
        on right: 14 15 16 17 18 26 31 32
    cond <AbstractExpr*> (84)
        on left: 34 35 36 37 38 39
        on right: 33 34 35 36 37
    oprel <std::string> (85)
        on left: 40 41 42 43 44 45
        on right: 38
    expr <AbstractExpr*> (86)
        on left: 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
        on right: 38 39 46 47 48 49 50 51 56
    tipo <AbstractExpr*> (87)
        on left: 63 64 65 66
        on right: 30 31


State 0

    0 $accept: . s END

    ID         shift, and go to state 1
    IMPR       shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    FOR        shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    RETORNO    shift, and go to state 8
    BREAK      shift, and go to state 9
    CONTINUE   shift, and go to state 10
    '{'        shift, and go to state 11

    s                go to state 12
    lSentencia       go to state 13
    sentencia        go to state 14
    ciclo_for        go to state 15
    ciclo_while      go to state 16
    ins_if           go to state 17
    escapa           go to state 18
    aumento          go to state 19
    decremento       go to state 20
    imprimir         go to state 21
    bloque           go to state 22
    declaracion_var  go to state 23
    asignacion_var   go to state 24


State 1

   23 aumento: ID . INCREMENT
   25 decremento: ID . DECREMENT
   30 declaracion_var: ID . AS tipo
   31                | ID . AS tipo '=' x
   32 asignacion_var: ID . '=' x

    AS         shift, and go to state 25
    INCREMENT  shift, and go to state 26
    DECREMENT  shift, and go to state 27
    '='        shift, and go to state 28


State 2

   26 imprimir: IMPR . '(' x ')'

    '('  shift, and go to state 29


State 3

   16 ins_if: IF . '(' x ')' '{' lSentencia '}'
   17       | IF . '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   18       | IF . '(' x ')' '{' lSentencia '}' ELSE ins_if

    '('  shift, and go to state 30


State 4

   15 ciclo_while: WHILE . '(' x ')' '{' lSentencia '}'

    '('  shift, and go to state 31


State 5

   14 ciclo_for: FOR . '(' declaracion_var z x z aumento ')' '{' lSentencia '}'

    '('  shift, and go to state 32


State 6

   22 aumento: INCREMENT . ID

    ID  shift, and go to state 33


State 7

   24 decremento: DECREMENT . ID

    ID  shift, and go to state 34


State 8

   21 escapa: RETORNO .

    $default  reduce using rule 21 (escapa)


State 9

   19 escapa: BREAK .

    $default  reduce using rule 19 (escapa)


State 10

   20 escapa: CONTINUE .

    $default  reduce using rule 20 (escapa)


State 11

   27 bloque: '{' . lSentencia '}'

    ID         shift, and go to state 1
    IMPR       shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    FOR        shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    RETORNO    shift, and go to state 8
    BREAK      shift, and go to state 9
    CONTINUE   shift, and go to state 10
    '{'        shift, and go to state 11

    lSentencia       go to state 35
    sentencia        go to state 14
    ciclo_for        go to state 15
    ciclo_while      go to state 16
    ins_if           go to state 17
    escapa           go to state 18
    aumento          go to state 19
    decremento       go to state 20
    imprimir         go to state 21
    bloque           go to state 22
    declaracion_var  go to state 23
    asignacion_var   go to state 24


State 12

    0 $accept: s . END

    END  shift, and go to state 36


State 13

    1 s: lSentencia .
    2 lSentencia: lSentencia . sentencia z

    ID         shift, and go to state 1
    IMPR       shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    FOR        shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    RETORNO    shift, and go to state 8
    BREAK      shift, and go to state 9
    CONTINUE   shift, and go to state 10
    '{'        shift, and go to state 11

    $default  reduce using rule 1 (s)

    sentencia        go to state 37
    ciclo_for        go to state 15
    ciclo_while      go to state 16
    ins_if           go to state 17
    escapa           go to state 18
    aumento          go to state 19
    decremento       go to state 20
    imprimir         go to state 21
    bloque           go to state 22
    declaracion_var  go to state 23
    asignacion_var   go to state 24


State 14

    3 lSentencia: sentencia . z

    ';'  shift, and go to state 38

    $default  reduce using rule 29 (z)

    z  go to state 39


State 15

   10 sentencia: ciclo_for .

    $default  reduce using rule 10 (sentencia)


State 16

   11 sentencia: ciclo_while .

    $default  reduce using rule 11 (sentencia)


State 17

   12 sentencia: ins_if .

    $default  reduce using rule 12 (sentencia)


State 18

   13 sentencia: escapa .

    $default  reduce using rule 13 (sentencia)


State 19

    8 sentencia: aumento .

    $default  reduce using rule 8 (sentencia)


State 20

    9 sentencia: decremento .

    $default  reduce using rule 9 (sentencia)


State 21

    6 sentencia: imprimir .

    $default  reduce using rule 6 (sentencia)


State 22

    7 sentencia: bloque .

    $default  reduce using rule 7 (sentencia)


State 23

    4 sentencia: declaracion_var .

    $default  reduce using rule 4 (sentencia)


State 24

    5 sentencia: asignacion_var .

    $default  reduce using rule 5 (sentencia)


State 25

   30 declaracion_var: ID AS . tipo
   31                | ID AS . tipo '=' x

    INT   shift, and go to state 40
    STR   shift, and go to state 41
    FLO   shift, and go to state 42
    BOOL  shift, and go to state 43

    tipo  go to state 44


State 26

   23 aumento: ID INCREMENT .

    $default  reduce using rule 23 (aumento)


State 27

   25 decremento: ID DECREMENT .

    $default  reduce using rule 25 (decremento)


State 28

   32 asignacion_var: ID '=' . x

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    NOT        shift, and go to state 52
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 55

    x     go to state 56
    cond  go to state 57
    expr  go to state 58


State 29

   26 imprimir: IMPR '(' . x ')'

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    NOT        shift, and go to state 52
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 55

    x     go to state 59
    cond  go to state 57
    expr  go to state 58


State 30

   16 ins_if: IF '(' . x ')' '{' lSentencia '}'
   17       | IF '(' . x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   18       | IF '(' . x ')' '{' lSentencia '}' ELSE ins_if

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    NOT        shift, and go to state 52
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 55

    x     go to state 60
    cond  go to state 57
    expr  go to state 58


State 31

   15 ciclo_while: WHILE '(' . x ')' '{' lSentencia '}'

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    NOT        shift, and go to state 52
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 55

    x     go to state 61
    cond  go to state 57
    expr  go to state 58


State 32

   14 ciclo_for: FOR '(' . declaracion_var z x z aumento ')' '{' lSentencia '}'

    ID  shift, and go to state 62

    declaracion_var  go to state 63


State 33

   22 aumento: INCREMENT ID .

    $default  reduce using rule 22 (aumento)


State 34

   24 decremento: DECREMENT ID .

    $default  reduce using rule 24 (decremento)


State 35

    2 lSentencia: lSentencia . sentencia z
   27 bloque: '{' lSentencia . '}'

    ID         shift, and go to state 1
    IMPR       shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    FOR        shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    RETORNO    shift, and go to state 8
    BREAK      shift, and go to state 9
    CONTINUE   shift, and go to state 10
    '{'        shift, and go to state 11
    '}'        shift, and go to state 64

    sentencia        go to state 37
    ciclo_for        go to state 15
    ciclo_while      go to state 16
    ins_if           go to state 17
    escapa           go to state 18
    aumento          go to state 19
    decremento       go to state 20
    imprimir         go to state 21
    bloque           go to state 22
    declaracion_var  go to state 23
    asignacion_var   go to state 24


State 36

    0 $accept: s END .

    $default  accept


State 37

    2 lSentencia: lSentencia sentencia . z

    ';'  shift, and go to state 38

    $default  reduce using rule 29 (z)

    z  go to state 65


State 38

   28 z: ';' .

    $default  reduce using rule 28 (z)


State 39

    3 lSentencia: sentencia z .

    $default  reduce using rule 3 (lSentencia)


State 40

   63 tipo: INT .

    $default  reduce using rule 63 (tipo)


State 41

   64 tipo: STR .

    $default  reduce using rule 64 (tipo)


State 42

   65 tipo: FLO .

    $default  reduce using rule 65 (tipo)


State 43

   66 tipo: BOOL .

    $default  reduce using rule 66 (tipo)


State 44

   30 declaracion_var: ID AS tipo .
   31                | ID AS tipo . '=' x

    '='  shift, and go to state 66

    $default  reduce using rule 30 (declaracion_var)


State 45

   57 expr: NUMERO .

    $default  reduce using rule 57 (expr)


State 46

   53 expr: ID . INCREMENT
   55     | ID . DECREMENT
   58     | ID .

    INCREMENT  shift, and go to state 67
    DECREMENT  shift, and go to state 68

    INCREMENT  [reduce using rule 58 (expr)]
    DECREMENT  [reduce using rule 58 (expr)]
    $default   reduce using rule 58 (expr)


State 47

   59 expr: STRING .

    $default  reduce using rule 59 (expr)


State 48

   60 expr: FLOAT .

    $default  reduce using rule 60 (expr)


State 49

   56 expr: MENOS . expr

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 69

    expr  go to state 70


State 50

   61 expr: TRUE .

    $default  reduce using rule 61 (expr)


State 51

   62 expr: FALSE .

    $default  reduce using rule 62 (expr)


State 52

   36 cond: NOT . cond

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    NOT        shift, and go to state 52
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 55

    cond  go to state 71
    expr  go to state 58


State 53

   52 expr: INCREMENT . ID

    ID  shift, and go to state 72


State 54

   54 expr: DECREMENT . ID

    ID  shift, and go to state 73


State 55

   37 cond: '(' . cond ')'
   51 expr: '(' . expr ')'

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    NOT        shift, and go to state 52
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 55

    cond  go to state 74
    expr  go to state 75


State 56

   32 asignacion_var: ID '=' x .

    $default  reduce using rule 32 (asignacion_var)


State 57

   33 x: cond .
   34 cond: cond . OR cond
   35     | cond . AND cond

    AND  shift, and go to state 76
    OR   shift, and go to state 77

    $default  reduce using rule 33 (x)


State 58

   38 cond: expr . oprel expr
   39     | expr .
   46 expr: expr . SUMA expr
   47     | expr . MENOS expr
   48     | expr . MULTIPLICACION expr
   49     | expr . DIVISION expr
   50     | expr . EXPONENCIAL expr

    SUMA            shift, and go to state 78
    MENOS           shift, and go to state 79
    MULTIPLICACION  shift, and go to state 80
    DIVISION        shift, and go to state 81
    EXPONENCIAL     shift, and go to state 82
    MENOR_IGUAL     shift, and go to state 83
    MAYOR_IGUAL     shift, and go to state 84
    IGUAL_IGUAL     shift, and go to state 85
    DIFERENTE       shift, and go to state 86
    MENOR           shift, and go to state 87
    MAYOR           shift, and go to state 88

    MENOS     [reduce using rule 39 (cond)]
    $default  reduce using rule 39 (cond)

    oprel  go to state 89


State 59

   26 imprimir: IMPR '(' x . ')'

    ')'  shift, and go to state 90


State 60

   16 ins_if: IF '(' x . ')' '{' lSentencia '}'
   17       | IF '(' x . ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   18       | IF '(' x . ')' '{' lSentencia '}' ELSE ins_if

    ')'  shift, and go to state 91


State 61

   15 ciclo_while: WHILE '(' x . ')' '{' lSentencia '}'

    ')'  shift, and go to state 92


State 62

   30 declaracion_var: ID . AS tipo
   31                | ID . AS tipo '=' x

    AS  shift, and go to state 25


State 63

   14 ciclo_for: FOR '(' declaracion_var . z x z aumento ')' '{' lSentencia '}'

    ';'  shift, and go to state 38

    $default  reduce using rule 29 (z)

    z  go to state 93


State 64

   27 bloque: '{' lSentencia '}' .

    $default  reduce using rule 27 (bloque)


State 65

    2 lSentencia: lSentencia sentencia z .

    $default  reduce using rule 2 (lSentencia)


State 66

   31 declaracion_var: ID AS tipo '=' . x

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    NOT        shift, and go to state 52
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 55

    x     go to state 94
    cond  go to state 57
    expr  go to state 58


State 67

   53 expr: ID INCREMENT .

    $default  reduce using rule 53 (expr)


State 68

   55 expr: ID DECREMENT .

    $default  reduce using rule 55 (expr)


State 69

   51 expr: '(' . expr ')'

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 69

    expr  go to state 95


State 70

   46 expr: expr . SUMA expr
   47     | expr . MENOS expr
   48     | expr . MULTIPLICACION expr
   49     | expr . DIVISION expr
   50     | expr . EXPONENCIAL expr
   56     | MENOS expr .

    EXPONENCIAL  shift, and go to state 82

    $default  reduce using rule 56 (expr)


State 71

   34 cond: cond . OR cond
   35     | cond . AND cond
   36     | NOT cond .

    AND  shift, and go to state 76
    OR   shift, and go to state 77

    AND       [reduce using rule 36 (cond)]
    OR        [reduce using rule 36 (cond)]
    $default  reduce using rule 36 (cond)


State 72

   52 expr: INCREMENT ID .

    $default  reduce using rule 52 (expr)


State 73

   54 expr: DECREMENT ID .

    $default  reduce using rule 54 (expr)


State 74

   34 cond: cond . OR cond
   35     | cond . AND cond
   37     | '(' cond . ')'

    AND  shift, and go to state 76
    OR   shift, and go to state 77
    ')'  shift, and go to state 96


State 75

   38 cond: expr . oprel expr
   39     | expr .
   46 expr: expr . SUMA expr
   47     | expr . MENOS expr
   48     | expr . MULTIPLICACION expr
   49     | expr . DIVISION expr
   50     | expr . EXPONENCIAL expr
   51     | '(' expr . ')'

    SUMA            shift, and go to state 78
    MENOS           shift, and go to state 79
    MULTIPLICACION  shift, and go to state 80
    DIVISION        shift, and go to state 81
    EXPONENCIAL     shift, and go to state 82
    MENOR_IGUAL     shift, and go to state 83
    MAYOR_IGUAL     shift, and go to state 84
    IGUAL_IGUAL     shift, and go to state 85
    DIFERENTE       shift, and go to state 86
    MENOR           shift, and go to state 87
    MAYOR           shift, and go to state 88
    ')'             shift, and go to state 97

    ')'       [reduce using rule 39 (cond)]
    $default  reduce using rule 39 (cond)

    oprel  go to state 89


State 76

   35 cond: cond AND . cond

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    NOT        shift, and go to state 52
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 55

    cond  go to state 98
    expr  go to state 58


State 77

   34 cond: cond OR . cond

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    NOT        shift, and go to state 52
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 55

    cond  go to state 99
    expr  go to state 58


State 78

   46 expr: expr SUMA . expr

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 69

    expr  go to state 100


State 79

   47 expr: expr MENOS . expr

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 69

    expr  go to state 101


State 80

   48 expr: expr MULTIPLICACION . expr

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 69

    expr  go to state 102


State 81

   49 expr: expr DIVISION . expr

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 69

    expr  go to state 103


State 82

   50 expr: expr EXPONENCIAL . expr

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 69

    expr  go to state 104


State 83

   43 oprel: MENOR_IGUAL .

    $default  reduce using rule 43 (oprel)


State 84

   44 oprel: MAYOR_IGUAL .

    $default  reduce using rule 44 (oprel)


State 85

   42 oprel: IGUAL_IGUAL .

    $default  reduce using rule 42 (oprel)


State 86

   45 oprel: DIFERENTE .

    $default  reduce using rule 45 (oprel)


State 87

   41 oprel: MENOR .

    $default  reduce using rule 41 (oprel)


State 88

   40 oprel: MAYOR .

    $default  reduce using rule 40 (oprel)


State 89

   38 cond: expr oprel . expr

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 69

    expr  go to state 105


State 90

   26 imprimir: IMPR '(' x ')' .

    $default  reduce using rule 26 (imprimir)


State 91

   16 ins_if: IF '(' x ')' . '{' lSentencia '}'
   17       | IF '(' x ')' . '{' lSentencia '}' ELSE '{' lSentencia '}'
   18       | IF '(' x ')' . '{' lSentencia '}' ELSE ins_if

    '{'  shift, and go to state 106


State 92

   15 ciclo_while: WHILE '(' x ')' . '{' lSentencia '}'

    '{'  shift, and go to state 107


State 93

   14 ciclo_for: FOR '(' declaracion_var z . x z aumento ')' '{' lSentencia '}'

    NUMERO     shift, and go to state 45
    ID         shift, and go to state 46
    STRING     shift, and go to state 47
    FLOAT      shift, and go to state 48
    MENOS      shift, and go to state 49
    TRUE       shift, and go to state 50
    FALSE      shift, and go to state 51
    NOT        shift, and go to state 52
    INCREMENT  shift, and go to state 53
    DECREMENT  shift, and go to state 54
    '('        shift, and go to state 55

    x     go to state 108
    cond  go to state 57
    expr  go to state 58


State 94

   31 declaracion_var: ID AS tipo '=' x .

    $default  reduce using rule 31 (declaracion_var)


State 95

   46 expr: expr . SUMA expr
   47     | expr . MENOS expr
   48     | expr . MULTIPLICACION expr
   49     | expr . DIVISION expr
   50     | expr . EXPONENCIAL expr
   51     | '(' expr . ')'

    SUMA            shift, and go to state 78
    MENOS           shift, and go to state 79
    MULTIPLICACION  shift, and go to state 80
    DIVISION        shift, and go to state 81
    EXPONENCIAL     shift, and go to state 82
    ')'             shift, and go to state 97


State 96

   37 cond: '(' cond ')' .

    $default  reduce using rule 37 (cond)


State 97

   51 expr: '(' expr ')' .

    $default  reduce using rule 51 (expr)


State 98

   34 cond: cond . OR cond
   35     | cond . AND cond
   35     | cond AND cond .

    $default  reduce using rule 35 (cond)


State 99

   34 cond: cond . OR cond
   34     | cond OR cond .
   35     | cond . AND cond

    AND  shift, and go to state 76

    $default  reduce using rule 34 (cond)


State 100

   46 expr: expr . SUMA expr
   46     | expr SUMA expr .
   47     | expr . MENOS expr
   48     | expr . MULTIPLICACION expr
   49     | expr . DIVISION expr
   50     | expr . EXPONENCIAL expr

    MULTIPLICACION  shift, and go to state 80
    DIVISION        shift, and go to state 81
    EXPONENCIAL     shift, and go to state 82

    $default  reduce using rule 46 (expr)


State 101

   46 expr: expr . SUMA expr
   47     | expr . MENOS expr
   47     | expr MENOS expr .
   48     | expr . MULTIPLICACION expr
   49     | expr . DIVISION expr
   50     | expr . EXPONENCIAL expr

    MULTIPLICACION  shift, and go to state 80
    DIVISION        shift, and go to state 81
    EXPONENCIAL     shift, and go to state 82

    $default  reduce using rule 47 (expr)


State 102

   46 expr: expr . SUMA expr
   47     | expr . MENOS expr
   48     | expr . MULTIPLICACION expr
   48     | expr MULTIPLICACION expr .
   49     | expr . DIVISION expr
   50     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 82

    $default  reduce using rule 48 (expr)


State 103

   46 expr: expr . SUMA expr
   47     | expr . MENOS expr
   48     | expr . MULTIPLICACION expr
   49     | expr . DIVISION expr
   49     | expr DIVISION expr .
   50     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 82

    $default  reduce using rule 49 (expr)


State 104

   46 expr: expr . SUMA expr
   47     | expr . MENOS expr
   48     | expr . MULTIPLICACION expr
   49     | expr . DIVISION expr
   50     | expr . EXPONENCIAL expr
   50     | expr EXPONENCIAL expr .

    EXPONENCIAL  shift, and go to state 82

    $default  reduce using rule 50 (expr)


State 105

   38 cond: expr oprel expr .
   46 expr: expr . SUMA expr
   47     | expr . MENOS expr
   48     | expr . MULTIPLICACION expr
   49     | expr . DIVISION expr
   50     | expr . EXPONENCIAL expr

    SUMA            shift, and go to state 78
    MENOS           shift, and go to state 79
    MULTIPLICACION  shift, and go to state 80
    DIVISION        shift, and go to state 81
    EXPONENCIAL     shift, and go to state 82

    MENOS     [reduce using rule 38 (cond)]
    $default  reduce using rule 38 (cond)


State 106

   16 ins_if: IF '(' x ')' '{' . lSentencia '}'
   17       | IF '(' x ')' '{' . lSentencia '}' ELSE '{' lSentencia '}'
   18       | IF '(' x ')' '{' . lSentencia '}' ELSE ins_if

    ID         shift, and go to state 1
    IMPR       shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    FOR        shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    RETORNO    shift, and go to state 8
    BREAK      shift, and go to state 9
    CONTINUE   shift, and go to state 10
    '{'        shift, and go to state 11

    lSentencia       go to state 109
    sentencia        go to state 14
    ciclo_for        go to state 15
    ciclo_while      go to state 16
    ins_if           go to state 17
    escapa           go to state 18
    aumento          go to state 19
    decremento       go to state 20
    imprimir         go to state 21
    bloque           go to state 22
    declaracion_var  go to state 23
    asignacion_var   go to state 24


State 107

   15 ciclo_while: WHILE '(' x ')' '{' . lSentencia '}'

    ID         shift, and go to state 1
    IMPR       shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    FOR        shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    RETORNO    shift, and go to state 8
    BREAK      shift, and go to state 9
    CONTINUE   shift, and go to state 10
    '{'        shift, and go to state 11

    lSentencia       go to state 110
    sentencia        go to state 14
    ciclo_for        go to state 15
    ciclo_while      go to state 16
    ins_if           go to state 17
    escapa           go to state 18
    aumento          go to state 19
    decremento       go to state 20
    imprimir         go to state 21
    bloque           go to state 22
    declaracion_var  go to state 23
    asignacion_var   go to state 24


State 108

   14 ciclo_for: FOR '(' declaracion_var z x . z aumento ')' '{' lSentencia '}'

    ';'  shift, and go to state 38

    $default  reduce using rule 29 (z)

    z  go to state 111


State 109

    2 lSentencia: lSentencia . sentencia z
   16 ins_if: IF '(' x ')' '{' lSentencia . '}'
   17       | IF '(' x ')' '{' lSentencia . '}' ELSE '{' lSentencia '}'
   18       | IF '(' x ')' '{' lSentencia . '}' ELSE ins_if

    ID         shift, and go to state 1
    IMPR       shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    FOR        shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    RETORNO    shift, and go to state 8
    BREAK      shift, and go to state 9
    CONTINUE   shift, and go to state 10
    '{'        shift, and go to state 11
    '}'        shift, and go to state 112

    sentencia        go to state 37
    ciclo_for        go to state 15
    ciclo_while      go to state 16
    ins_if           go to state 17
    escapa           go to state 18
    aumento          go to state 19
    decremento       go to state 20
    imprimir         go to state 21
    bloque           go to state 22
    declaracion_var  go to state 23
    asignacion_var   go to state 24


State 110

    2 lSentencia: lSentencia . sentencia z
   15 ciclo_while: WHILE '(' x ')' '{' lSentencia . '}'

    ID         shift, and go to state 1
    IMPR       shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    FOR        shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    RETORNO    shift, and go to state 8
    BREAK      shift, and go to state 9
    CONTINUE   shift, and go to state 10
    '{'        shift, and go to state 11
    '}'        shift, and go to state 113

    sentencia        go to state 37
    ciclo_for        go to state 15
    ciclo_while      go to state 16
    ins_if           go to state 17
    escapa           go to state 18
    aumento          go to state 19
    decremento       go to state 20
    imprimir         go to state 21
    bloque           go to state 22
    declaracion_var  go to state 23
    asignacion_var   go to state 24


State 111

   14 ciclo_for: FOR '(' declaracion_var z x z . aumento ')' '{' lSentencia '}'

    ID         shift, and go to state 114
    INCREMENT  shift, and go to state 6

    aumento  go to state 115


State 112

   16 ins_if: IF '(' x ')' '{' lSentencia '}' .
   17       | IF '(' x ')' '{' lSentencia '}' . ELSE '{' lSentencia '}'
   18       | IF '(' x ')' '{' lSentencia '}' . ELSE ins_if

    ELSE  shift, and go to state 116

    $default  reduce using rule 16 (ins_if)


State 113

   15 ciclo_while: WHILE '(' x ')' '{' lSentencia '}' .

    $default  reduce using rule 15 (ciclo_while)


State 114

   23 aumento: ID . INCREMENT

    INCREMENT  shift, and go to state 26


State 115

   14 ciclo_for: FOR '(' declaracion_var z x z aumento . ')' '{' lSentencia '}'

    ')'  shift, and go to state 117


State 116

   17 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE . '{' lSentencia '}'
   18       | IF '(' x ')' '{' lSentencia '}' ELSE . ins_if

    IF   shift, and go to state 3
    '{'  shift, and go to state 118

    ins_if  go to state 119


State 117

   14 ciclo_for: FOR '(' declaracion_var z x z aumento ')' . '{' lSentencia '}'

    '{'  shift, and go to state 120


State 118

   17 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' . lSentencia '}'

    ID         shift, and go to state 1
    IMPR       shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    FOR        shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    RETORNO    shift, and go to state 8
    BREAK      shift, and go to state 9
    CONTINUE   shift, and go to state 10
    '{'        shift, and go to state 11

    lSentencia       go to state 121
    sentencia        go to state 14
    ciclo_for        go to state 15
    ciclo_while      go to state 16
    ins_if           go to state 17
    escapa           go to state 18
    aumento          go to state 19
    decremento       go to state 20
    imprimir         go to state 21
    bloque           go to state 22
    declaracion_var  go to state 23
    asignacion_var   go to state 24


State 119

   18 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE ins_if .

    $default  reduce using rule 18 (ins_if)


State 120

   14 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' . lSentencia '}'

    ID         shift, and go to state 1
    IMPR       shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    FOR        shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    RETORNO    shift, and go to state 8
    BREAK      shift, and go to state 9
    CONTINUE   shift, and go to state 10
    '{'        shift, and go to state 11

    lSentencia       go to state 122
    sentencia        go to state 14
    ciclo_for        go to state 15
    ciclo_while      go to state 16
    ins_if           go to state 17
    escapa           go to state 18
    aumento          go to state 19
    decremento       go to state 20
    imprimir         go to state 21
    bloque           go to state 22
    declaracion_var  go to state 23
    asignacion_var   go to state 24


State 121

    2 lSentencia: lSentencia . sentencia z
   17 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia . '}'

    ID         shift, and go to state 1
    IMPR       shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    FOR        shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    RETORNO    shift, and go to state 8
    BREAK      shift, and go to state 9
    CONTINUE   shift, and go to state 10
    '{'        shift, and go to state 11
    '}'        shift, and go to state 123

    sentencia        go to state 37
    ciclo_for        go to state 15
    ciclo_while      go to state 16
    ins_if           go to state 17
    escapa           go to state 18
    aumento          go to state 19
    decremento       go to state 20
    imprimir         go to state 21
    bloque           go to state 22
    declaracion_var  go to state 23
    asignacion_var   go to state 24


State 122

    2 lSentencia: lSentencia . sentencia z
   14 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia . '}'

    ID         shift, and go to state 1
    IMPR       shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    FOR        shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    RETORNO    shift, and go to state 8
    BREAK      shift, and go to state 9
    CONTINUE   shift, and go to state 10
    '{'        shift, and go to state 11
    '}'        shift, and go to state 124

    sentencia        go to state 37
    ciclo_for        go to state 15
    ciclo_while      go to state 16
    ins_if           go to state 17
    escapa           go to state 18
    aumento          go to state 19
    decremento       go to state 20
    imprimir         go to state 21
    bloque           go to state 22
    declaracion_var  go to state 23
    asignacion_var   go to state 24


State 123

   17 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}' .

    $default  reduce using rule 17 (ins_if)


State 124

   14 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia '}' .

    $default  reduce using rule 14 (ciclo_for)
