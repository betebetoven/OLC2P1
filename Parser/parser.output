Terminals unused in grammar

    DIM
    AS
    THEN
    PRINT
    PRINTF
    INTERROGACION
    DOT
    LEFT_BRACKET
    RIGHT_BRACKET
    VECTOR
    PUSH_FRONT
    DOT_PUSH_BACK
    STRUCT
    REMOVE
    MEDIAN
    IOTA
    MEAN
    SIZE
    ATOI
    GET
    '['
    ']'
    '.'


State 47 conflicts: 2 shift/reduce
State 59 conflicts: 1 shift/reduce
State 72 conflicts: 2 shift/reduce
State 76 conflicts: 1 shift/reduce
State 109 conflicts: 1 shift/reduce


Grammar

    0 $accept: s END

    1 s: lSentencia

    2 lSentencia: lSentencia sentencia z
    3           | sentencia z

    4 sentencia: declaracion_var
    5          | asignacion_var
    6          | imprimir
    7          | bloque
    8          | aumento
    9          | decremento
   10          | ciclo_for
   11          | ciclo_while
   12          | ins_if
   13          | escapa

   14 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia '}'

   15 ciclo_while: WHILE '(' x ')' '{' lSentencia '}'

   16 ins_if: IF '(' x ')' '{' lSentencia '}'
   17       | IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   18       | IF '(' x ')' '{' lSentencia '}' ELSE ins_if

   19 escapa: BREAK
   20       | CONTINUE
   21       | RETORNO

   22 aumento: INCREMENT ID
   23        | ID INCREMENT

   24 decremento: DECREMENT ID
   25           | ID DECREMENT

   26 imprimir: IMPR '(' lista_Expr ')'

   27 lista_Expr: lista_Expr ',' x
   28           | x

   29 bloque: '{' lSentencia '}'

   30 z: ';'
   31  | %empty

   32 declaracion_var: tipo ID
   33                | tipo ID '=' x

   34 asignacion_var: ID '=' x

   35 x: cond

   36 cond: cond OR cond
   37     | cond AND cond
   38     | NOT cond
   39     | '(' cond ')'
   40     | expr oprel expr
   41     | expr

   42 oprel: MAYOR
   43      | MENOR
   44      | IGUAL_IGUAL
   45      | MENOR_IGUAL
   46      | MAYOR_IGUAL
   47      | DIFERENTE

   48 expr: expr SUMA expr
   49     | expr MENOS expr
   50     | expr MULTIPLICACION expr
   51     | expr DIVISION expr
   52     | expr MOD expr
   53     | expr EXPONENCIAL expr
   54     | '(' expr ')'
   55     | INCREMENT ID
   56     | ID INCREMENT
   57     | DECREMENT ID
   58     | ID DECREMENT
   59     | MENOS expr
   60     | NUMERO
   61     | ID
   62     | STRING
   63     | FLOAT
   64     | TRUE
   65     | FALSE

   66 tipo: INT
   67     | STR
   68     | FLO
   69     | BOOL
   70     | VOID


Terminals, with rules where they appear

    END (0) 0
    '(' (40) 14 15 16 17 18 26 39 54
    ')' (41) 14 15 16 17 18 26 39 54
    ',' (44) 27
    '.' (46)
    ';' (59) 30
    '=' (61) 33 34
    '[' (91)
    ']' (93)
    '{' (123) 14 15 16 17 18 29
    '}' (125) 14 15 16 17 18 29
    error (256)
    NUMERO <std::string> (258) 60
    ID <std::string> (259) 22 23 24 25 32 33 34 55 56 57 58 61
    STRING <std::string> (260) 62
    INT <std::string> (261) 66
    STR <std::string> (262) 67
    FLOAT <std::string> (263) 63
    FLO <std::string> (264) 68
    BOOL <std::string> (265) 69
    SUMA (266) 48
    MENOS (267) 49 59
    DIM (268)
    AS (269)
    IMPR (270) 26
    MOD (271) 52
    VOID (272) 70
    TRUE (273) 64
    FALSE (274) 65
    AND (275) 37
    NOT (276) 38
    IF (277) 16 17 18
    THEN (278)
    ELSE (279) 17 18
    WHILE (280) 15
    PRINT (281)
    PRINTF (282)
    FOR (283) 14
    MULTIPLICACION (284) 50
    DIVISION (285) 51
    EXPONENCIAL (286) 53
    MENOR_IGUAL (287) 45
    MAYOR_IGUAL (288) 46
    IGUAL_IGUAL (289) 44
    DIFERENTE (290) 47
    MENOR (291) 43
    MAYOR (292) 42
    OR (293) 36
    INTERROGACION (294)
    INCREMENT (295) 22 23 55 56
    DECREMENT (296) 24 25 57 58
    DOT (297)
    LEFT_BRACKET (298)
    RIGHT_BRACKET (299)
    VECTOR (300)
    PUSH_FRONT (301)
    DOT_PUSH_BACK (302)
    STRUCT (303)
    REMOVE (304)
    MEDIAN (305)
    IOTA (306)
    MEAN (307)
    SIZE (308)
    ATOI (309)
    GET (310)
    RETORNO (311) 21
    BREAK (312) 19
    CONTINUE (313) 20
    NEG (314)


Nonterminals, with rules where they appear

    $accept (70)
        on left: 0
    s <QVector<AbstractExpr*>*> (71)
        on left: 1
        on right: 0
    lSentencia <QVector<AbstractExpr*>*> (72)
        on left: 2 3
        on right: 1 2 14 15 16 17 18 29
    sentencia <AbstractExpr*> (73)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 2 3
    ciclo_for <AbstractExpr*> (74)
        on left: 14
        on right: 10
    ciclo_while <AbstractExpr*> (75)
        on left: 15
        on right: 11
    ins_if <AbstractExpr*> (76)
        on left: 16 17 18
        on right: 12 18
    escapa <AbstractExpr*> (77)
        on left: 19 20 21
        on right: 13
    aumento <AbstractExpr*> (78)
        on left: 22 23
        on right: 8 14
    decremento <AbstractExpr*> (79)
        on left: 24 25
        on right: 9
    imprimir <NT_Imprimir*> (80)
        on left: 26
        on right: 6
    lista_Expr <AbstractExpr*> (81)
        on left: 27 28
        on right: 26 27
    bloque <AbstractExpr*> (82)
        on left: 29
        on right: 7
    z (83)
        on left: 30 31
        on right: 2 3 14
    declaracion_var <AbstractExpr*> (84)
        on left: 32 33
        on right: 4 14
    asignacion_var <AbstractExpr*> (85)
        on left: 34
        on right: 5
    x <AbstractExpr*> (86)
        on left: 35
        on right: 14 15 16 17 18 27 28 33 34
    cond <AbstractExpr*> (87)
        on left: 36 37 38 39 40 41
        on right: 35 36 37 38 39
    oprel <std::string> (88)
        on left: 42 43 44 45 46 47
        on right: 40
    expr <AbstractExpr*> (89)
        on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
        on right: 40 41 48 49 50 51 52 53 54 59
    tipo <AbstractExpr*> (90)
        on left: 66 67 68 69 70
        on right: 32 33


State 0

    0 $accept: . s END

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16

    s                go to state 17
    lSentencia       go to state 18
    sentencia        go to state 19
    ciclo_for        go to state 20
    ciclo_while      go to state 21
    ins_if           go to state 22
    escapa           go to state 23
    aumento          go to state 24
    decremento       go to state 25
    imprimir         go to state 26
    bloque           go to state 27
    declaracion_var  go to state 28
    asignacion_var   go to state 29
    tipo             go to state 30


State 1

   23 aumento: ID . INCREMENT
   25 decremento: ID . DECREMENT
   34 asignacion_var: ID . '=' x

    INCREMENT  shift, and go to state 31
    DECREMENT  shift, and go to state 32
    '='        shift, and go to state 33


State 2

   66 tipo: INT .

    $default  reduce using rule 66 (tipo)


State 3

   67 tipo: STR .

    $default  reduce using rule 67 (tipo)


State 4

   68 tipo: FLO .

    $default  reduce using rule 68 (tipo)


State 5

   69 tipo: BOOL .

    $default  reduce using rule 69 (tipo)


State 6

   26 imprimir: IMPR . '(' lista_Expr ')'

    '('  shift, and go to state 34


State 7

   70 tipo: VOID .

    $default  reduce using rule 70 (tipo)


State 8

   16 ins_if: IF . '(' x ')' '{' lSentencia '}'
   17       | IF . '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   18       | IF . '(' x ')' '{' lSentencia '}' ELSE ins_if

    '('  shift, and go to state 35


State 9

   15 ciclo_while: WHILE . '(' x ')' '{' lSentencia '}'

    '('  shift, and go to state 36


State 10

   14 ciclo_for: FOR . '(' declaracion_var z x z aumento ')' '{' lSentencia '}'

    '('  shift, and go to state 37


State 11

   22 aumento: INCREMENT . ID

    ID  shift, and go to state 38


State 12

   24 decremento: DECREMENT . ID

    ID  shift, and go to state 39


State 13

   21 escapa: RETORNO .

    $default  reduce using rule 21 (escapa)


State 14

   19 escapa: BREAK .

    $default  reduce using rule 19 (escapa)


State 15

   20 escapa: CONTINUE .

    $default  reduce using rule 20 (escapa)


State 16

   29 bloque: '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16

    lSentencia       go to state 40
    sentencia        go to state 19
    ciclo_for        go to state 20
    ciclo_while      go to state 21
    ins_if           go to state 22
    escapa           go to state 23
    aumento          go to state 24
    decremento       go to state 25
    imprimir         go to state 26
    bloque           go to state 27
    declaracion_var  go to state 28
    asignacion_var   go to state 29
    tipo             go to state 30


State 17

    0 $accept: s . END

    END  shift, and go to state 41


State 18

    1 s: lSentencia .
    2 lSentencia: lSentencia . sentencia z

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16

    $default  reduce using rule 1 (s)

    sentencia        go to state 42
    ciclo_for        go to state 20
    ciclo_while      go to state 21
    ins_if           go to state 22
    escapa           go to state 23
    aumento          go to state 24
    decremento       go to state 25
    imprimir         go to state 26
    bloque           go to state 27
    declaracion_var  go to state 28
    asignacion_var   go to state 29
    tipo             go to state 30


State 19

    3 lSentencia: sentencia . z

    ';'  shift, and go to state 43

    $default  reduce using rule 31 (z)

    z  go to state 44


State 20

   10 sentencia: ciclo_for .

    $default  reduce using rule 10 (sentencia)


State 21

   11 sentencia: ciclo_while .

    $default  reduce using rule 11 (sentencia)


State 22

   12 sentencia: ins_if .

    $default  reduce using rule 12 (sentencia)


State 23

   13 sentencia: escapa .

    $default  reduce using rule 13 (sentencia)


State 24

    8 sentencia: aumento .

    $default  reduce using rule 8 (sentencia)


State 25

    9 sentencia: decremento .

    $default  reduce using rule 9 (sentencia)


State 26

    6 sentencia: imprimir .

    $default  reduce using rule 6 (sentencia)


State 27

    7 sentencia: bloque .

    $default  reduce using rule 7 (sentencia)


State 28

    4 sentencia: declaracion_var .

    $default  reduce using rule 4 (sentencia)


State 29

    5 sentencia: asignacion_var .

    $default  reduce using rule 5 (sentencia)


State 30

   32 declaracion_var: tipo . ID
   33                | tipo . ID '=' x

    ID  shift, and go to state 45


State 31

   23 aumento: ID INCREMENT .

    $default  reduce using rule 23 (aumento)


State 32

   25 decremento: ID DECREMENT .

    $default  reduce using rule 25 (decremento)


State 33

   34 asignacion_var: ID '=' . x

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    NOT        shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 56

    x     go to state 57
    cond  go to state 58
    expr  go to state 59


State 34

   26 imprimir: IMPR '(' . lista_Expr ')'

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    NOT        shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 56

    lista_Expr  go to state 60
    x           go to state 61
    cond        go to state 58
    expr        go to state 59


State 35

   16 ins_if: IF '(' . x ')' '{' lSentencia '}'
   17       | IF '(' . x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   18       | IF '(' . x ')' '{' lSentencia '}' ELSE ins_if

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    NOT        shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 56

    x     go to state 62
    cond  go to state 58
    expr  go to state 59


State 36

   15 ciclo_while: WHILE '(' . x ')' '{' lSentencia '}'

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    NOT        shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 56

    x     go to state 63
    cond  go to state 58
    expr  go to state 59


State 37

   14 ciclo_for: FOR '(' . declaracion_var z x z aumento ')' '{' lSentencia '}'

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7

    declaracion_var  go to state 64
    tipo             go to state 30


State 38

   22 aumento: INCREMENT ID .

    $default  reduce using rule 22 (aumento)


State 39

   24 decremento: DECREMENT ID .

    $default  reduce using rule 24 (decremento)


State 40

    2 lSentencia: lSentencia . sentencia z
   29 bloque: '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16
    '}'        shift, and go to state 65

    sentencia        go to state 42
    ciclo_for        go to state 20
    ciclo_while      go to state 21
    ins_if           go to state 22
    escapa           go to state 23
    aumento          go to state 24
    decremento       go to state 25
    imprimir         go to state 26
    bloque           go to state 27
    declaracion_var  go to state 28
    asignacion_var   go to state 29
    tipo             go to state 30


State 41

    0 $accept: s END .

    $default  accept


State 42

    2 lSentencia: lSentencia sentencia . z

    ';'  shift, and go to state 43

    $default  reduce using rule 31 (z)

    z  go to state 66


State 43

   30 z: ';' .

    $default  reduce using rule 30 (z)


State 44

    3 lSentencia: sentencia z .

    $default  reduce using rule 3 (lSentencia)


State 45

   32 declaracion_var: tipo ID .
   33                | tipo ID . '=' x

    '='  shift, and go to state 67

    $default  reduce using rule 32 (declaracion_var)


State 46

   60 expr: NUMERO .

    $default  reduce using rule 60 (expr)


State 47

   56 expr: ID . INCREMENT
   58     | ID . DECREMENT
   61     | ID .

    INCREMENT  shift, and go to state 68
    DECREMENT  shift, and go to state 69

    INCREMENT  [reduce using rule 61 (expr)]
    DECREMENT  [reduce using rule 61 (expr)]
    $default   reduce using rule 61 (expr)


State 48

   62 expr: STRING .

    $default  reduce using rule 62 (expr)


State 49

   63 expr: FLOAT .

    $default  reduce using rule 63 (expr)


State 50

   59 expr: MENOS . expr

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 70

    expr  go to state 71


State 51

   64 expr: TRUE .

    $default  reduce using rule 64 (expr)


State 52

   65 expr: FALSE .

    $default  reduce using rule 65 (expr)


State 53

   38 cond: NOT . cond

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    NOT        shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 56

    cond  go to state 72
    expr  go to state 59


State 54

   55 expr: INCREMENT . ID

    ID  shift, and go to state 73


State 55

   57 expr: DECREMENT . ID

    ID  shift, and go to state 74


State 56

   39 cond: '(' . cond ')'
   54 expr: '(' . expr ')'

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    NOT        shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 56

    cond  go to state 75
    expr  go to state 76


State 57

   34 asignacion_var: ID '=' x .

    $default  reduce using rule 34 (asignacion_var)


State 58

   35 x: cond .
   36 cond: cond . OR cond
   37     | cond . AND cond

    AND  shift, and go to state 77
    OR   shift, and go to state 78

    $default  reduce using rule 35 (x)


State 59

   40 cond: expr . oprel expr
   41     | expr .
   48 expr: expr . SUMA expr
   49     | expr . MENOS expr
   50     | expr . MULTIPLICACION expr
   51     | expr . DIVISION expr
   52     | expr . MOD expr
   53     | expr . EXPONENCIAL expr

    SUMA            shift, and go to state 79
    MENOS           shift, and go to state 80
    MOD             shift, and go to state 81
    MULTIPLICACION  shift, and go to state 82
    DIVISION        shift, and go to state 83
    EXPONENCIAL     shift, and go to state 84
    MENOR_IGUAL     shift, and go to state 85
    MAYOR_IGUAL     shift, and go to state 86
    IGUAL_IGUAL     shift, and go to state 87
    DIFERENTE       shift, and go to state 88
    MENOR           shift, and go to state 89
    MAYOR           shift, and go to state 90

    MENOS     [reduce using rule 41 (cond)]
    $default  reduce using rule 41 (cond)

    oprel  go to state 91


State 60

   26 imprimir: IMPR '(' lista_Expr . ')'
   27 lista_Expr: lista_Expr . ',' x

    ')'  shift, and go to state 92
    ','  shift, and go to state 93


State 61

   28 lista_Expr: x .

    $default  reduce using rule 28 (lista_Expr)


State 62

   16 ins_if: IF '(' x . ')' '{' lSentencia '}'
   17       | IF '(' x . ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   18       | IF '(' x . ')' '{' lSentencia '}' ELSE ins_if

    ')'  shift, and go to state 94


State 63

   15 ciclo_while: WHILE '(' x . ')' '{' lSentencia '}'

    ')'  shift, and go to state 95


State 64

   14 ciclo_for: FOR '(' declaracion_var . z x z aumento ')' '{' lSentencia '}'

    ';'  shift, and go to state 43

    $default  reduce using rule 31 (z)

    z  go to state 96


State 65

   29 bloque: '{' lSentencia '}' .

    $default  reduce using rule 29 (bloque)


State 66

    2 lSentencia: lSentencia sentencia z .

    $default  reduce using rule 2 (lSentencia)


State 67

   33 declaracion_var: tipo ID '=' . x

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    NOT        shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 56

    x     go to state 97
    cond  go to state 58
    expr  go to state 59


State 68

   56 expr: ID INCREMENT .

    $default  reduce using rule 56 (expr)


State 69

   58 expr: ID DECREMENT .

    $default  reduce using rule 58 (expr)


State 70

   54 expr: '(' . expr ')'

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 70

    expr  go to state 98


State 71

   48 expr: expr . SUMA expr
   49     | expr . MENOS expr
   50     | expr . MULTIPLICACION expr
   51     | expr . DIVISION expr
   52     | expr . MOD expr
   53     | expr . EXPONENCIAL expr
   59     | MENOS expr .

    EXPONENCIAL  shift, and go to state 84

    $default  reduce using rule 59 (expr)


State 72

   36 cond: cond . OR cond
   37     | cond . AND cond
   38     | NOT cond .

    AND  shift, and go to state 77
    OR   shift, and go to state 78

    AND       [reduce using rule 38 (cond)]
    OR        [reduce using rule 38 (cond)]
    $default  reduce using rule 38 (cond)


State 73

   55 expr: INCREMENT ID .

    $default  reduce using rule 55 (expr)


State 74

   57 expr: DECREMENT ID .

    $default  reduce using rule 57 (expr)


State 75

   36 cond: cond . OR cond
   37     | cond . AND cond
   39     | '(' cond . ')'

    AND  shift, and go to state 77
    OR   shift, and go to state 78
    ')'  shift, and go to state 99


State 76

   40 cond: expr . oprel expr
   41     | expr .
   48 expr: expr . SUMA expr
   49     | expr . MENOS expr
   50     | expr . MULTIPLICACION expr
   51     | expr . DIVISION expr
   52     | expr . MOD expr
   53     | expr . EXPONENCIAL expr
   54     | '(' expr . ')'

    SUMA            shift, and go to state 79
    MENOS           shift, and go to state 80
    MOD             shift, and go to state 81
    MULTIPLICACION  shift, and go to state 82
    DIVISION        shift, and go to state 83
    EXPONENCIAL     shift, and go to state 84
    MENOR_IGUAL     shift, and go to state 85
    MAYOR_IGUAL     shift, and go to state 86
    IGUAL_IGUAL     shift, and go to state 87
    DIFERENTE       shift, and go to state 88
    MENOR           shift, and go to state 89
    MAYOR           shift, and go to state 90
    ')'             shift, and go to state 100

    ')'       [reduce using rule 41 (cond)]
    $default  reduce using rule 41 (cond)

    oprel  go to state 91


State 77

   37 cond: cond AND . cond

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    NOT        shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 56

    cond  go to state 101
    expr  go to state 59


State 78

   36 cond: cond OR . cond

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    NOT        shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 56

    cond  go to state 102
    expr  go to state 59


State 79

   48 expr: expr SUMA . expr

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 70

    expr  go to state 103


State 80

   49 expr: expr MENOS . expr

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 70

    expr  go to state 104


State 81

   52 expr: expr MOD . expr

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 70

    expr  go to state 105


State 82

   50 expr: expr MULTIPLICACION . expr

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 70

    expr  go to state 106


State 83

   51 expr: expr DIVISION . expr

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 70

    expr  go to state 107


State 84

   53 expr: expr EXPONENCIAL . expr

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 70

    expr  go to state 108


State 85

   45 oprel: MENOR_IGUAL .

    $default  reduce using rule 45 (oprel)


State 86

   46 oprel: MAYOR_IGUAL .

    $default  reduce using rule 46 (oprel)


State 87

   44 oprel: IGUAL_IGUAL .

    $default  reduce using rule 44 (oprel)


State 88

   47 oprel: DIFERENTE .

    $default  reduce using rule 47 (oprel)


State 89

   43 oprel: MENOR .

    $default  reduce using rule 43 (oprel)


State 90

   42 oprel: MAYOR .

    $default  reduce using rule 42 (oprel)


State 91

   40 cond: expr oprel . expr

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 70

    expr  go to state 109


State 92

   26 imprimir: IMPR '(' lista_Expr ')' .

    $default  reduce using rule 26 (imprimir)


State 93

   27 lista_Expr: lista_Expr ',' . x

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    NOT        shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 56

    x     go to state 110
    cond  go to state 58
    expr  go to state 59


State 94

   16 ins_if: IF '(' x ')' . '{' lSentencia '}'
   17       | IF '(' x ')' . '{' lSentencia '}' ELSE '{' lSentencia '}'
   18       | IF '(' x ')' . '{' lSentencia '}' ELSE ins_if

    '{'  shift, and go to state 111


State 95

   15 ciclo_while: WHILE '(' x ')' . '{' lSentencia '}'

    '{'  shift, and go to state 112


State 96

   14 ciclo_for: FOR '(' declaracion_var z . x z aumento ')' '{' lSentencia '}'

    NUMERO     shift, and go to state 46
    ID         shift, and go to state 47
    STRING     shift, and go to state 48
    FLOAT      shift, and go to state 49
    MENOS      shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    NOT        shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55
    '('        shift, and go to state 56

    x     go to state 113
    cond  go to state 58
    expr  go to state 59


State 97

   33 declaracion_var: tipo ID '=' x .

    $default  reduce using rule 33 (declaracion_var)


State 98

   48 expr: expr . SUMA expr
   49     | expr . MENOS expr
   50     | expr . MULTIPLICACION expr
   51     | expr . DIVISION expr
   52     | expr . MOD expr
   53     | expr . EXPONENCIAL expr
   54     | '(' expr . ')'

    SUMA            shift, and go to state 79
    MENOS           shift, and go to state 80
    MOD             shift, and go to state 81
    MULTIPLICACION  shift, and go to state 82
    DIVISION        shift, and go to state 83
    EXPONENCIAL     shift, and go to state 84
    ')'             shift, and go to state 100


State 99

   39 cond: '(' cond ')' .

    $default  reduce using rule 39 (cond)


State 100

   54 expr: '(' expr ')' .

    $default  reduce using rule 54 (expr)


State 101

   36 cond: cond . OR cond
   37     | cond . AND cond
   37     | cond AND cond .

    $default  reduce using rule 37 (cond)


State 102

   36 cond: cond . OR cond
   36     | cond OR cond .
   37     | cond . AND cond

    AND  shift, and go to state 77

    $default  reduce using rule 36 (cond)


State 103

   48 expr: expr . SUMA expr
   48     | expr SUMA expr .
   49     | expr . MENOS expr
   50     | expr . MULTIPLICACION expr
   51     | expr . DIVISION expr
   52     | expr . MOD expr
   53     | expr . EXPONENCIAL expr

    MOD             shift, and go to state 81
    MULTIPLICACION  shift, and go to state 82
    DIVISION        shift, and go to state 83
    EXPONENCIAL     shift, and go to state 84

    $default  reduce using rule 48 (expr)


State 104

   48 expr: expr . SUMA expr
   49     | expr . MENOS expr
   49     | expr MENOS expr .
   50     | expr . MULTIPLICACION expr
   51     | expr . DIVISION expr
   52     | expr . MOD expr
   53     | expr . EXPONENCIAL expr

    MOD             shift, and go to state 81
    MULTIPLICACION  shift, and go to state 82
    DIVISION        shift, and go to state 83
    EXPONENCIAL     shift, and go to state 84

    $default  reduce using rule 49 (expr)


State 105

   48 expr: expr . SUMA expr
   49     | expr . MENOS expr
   50     | expr . MULTIPLICACION expr
   51     | expr . DIVISION expr
   52     | expr . MOD expr
   52     | expr MOD expr .
   53     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 84

    $default  reduce using rule 52 (expr)


State 106

   48 expr: expr . SUMA expr
   49     | expr . MENOS expr
   50     | expr . MULTIPLICACION expr
   50     | expr MULTIPLICACION expr .
   51     | expr . DIVISION expr
   52     | expr . MOD expr
   53     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 84

    $default  reduce using rule 50 (expr)


State 107

   48 expr: expr . SUMA expr
   49     | expr . MENOS expr
   50     | expr . MULTIPLICACION expr
   51     | expr . DIVISION expr
   51     | expr DIVISION expr .
   52     | expr . MOD expr
   53     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 84

    $default  reduce using rule 51 (expr)


State 108

   48 expr: expr . SUMA expr
   49     | expr . MENOS expr
   50     | expr . MULTIPLICACION expr
   51     | expr . DIVISION expr
   52     | expr . MOD expr
   53     | expr . EXPONENCIAL expr
   53     | expr EXPONENCIAL expr .

    EXPONENCIAL  shift, and go to state 84

    $default  reduce using rule 53 (expr)


State 109

   40 cond: expr oprel expr .
   48 expr: expr . SUMA expr
   49     | expr . MENOS expr
   50     | expr . MULTIPLICACION expr
   51     | expr . DIVISION expr
   52     | expr . MOD expr
   53     | expr . EXPONENCIAL expr

    SUMA            shift, and go to state 79
    MENOS           shift, and go to state 80
    MOD             shift, and go to state 81
    MULTIPLICACION  shift, and go to state 82
    DIVISION        shift, and go to state 83
    EXPONENCIAL     shift, and go to state 84

    MENOS     [reduce using rule 40 (cond)]
    $default  reduce using rule 40 (cond)


State 110

   27 lista_Expr: lista_Expr ',' x .

    $default  reduce using rule 27 (lista_Expr)


State 111

   16 ins_if: IF '(' x ')' '{' . lSentencia '}'
   17       | IF '(' x ')' '{' . lSentencia '}' ELSE '{' lSentencia '}'
   18       | IF '(' x ')' '{' . lSentencia '}' ELSE ins_if

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16

    lSentencia       go to state 114
    sentencia        go to state 19
    ciclo_for        go to state 20
    ciclo_while      go to state 21
    ins_if           go to state 22
    escapa           go to state 23
    aumento          go to state 24
    decremento       go to state 25
    imprimir         go to state 26
    bloque           go to state 27
    declaracion_var  go to state 28
    asignacion_var   go to state 29
    tipo             go to state 30


State 112

   15 ciclo_while: WHILE '(' x ')' '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16

    lSentencia       go to state 115
    sentencia        go to state 19
    ciclo_for        go to state 20
    ciclo_while      go to state 21
    ins_if           go to state 22
    escapa           go to state 23
    aumento          go to state 24
    decremento       go to state 25
    imprimir         go to state 26
    bloque           go to state 27
    declaracion_var  go to state 28
    asignacion_var   go to state 29
    tipo             go to state 30


State 113

   14 ciclo_for: FOR '(' declaracion_var z x . z aumento ')' '{' lSentencia '}'

    ';'  shift, and go to state 43

    $default  reduce using rule 31 (z)

    z  go to state 116


State 114

    2 lSentencia: lSentencia . sentencia z
   16 ins_if: IF '(' x ')' '{' lSentencia . '}'
   17       | IF '(' x ')' '{' lSentencia . '}' ELSE '{' lSentencia '}'
   18       | IF '(' x ')' '{' lSentencia . '}' ELSE ins_if

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16
    '}'        shift, and go to state 117

    sentencia        go to state 42
    ciclo_for        go to state 20
    ciclo_while      go to state 21
    ins_if           go to state 22
    escapa           go to state 23
    aumento          go to state 24
    decremento       go to state 25
    imprimir         go to state 26
    bloque           go to state 27
    declaracion_var  go to state 28
    asignacion_var   go to state 29
    tipo             go to state 30


State 115

    2 lSentencia: lSentencia . sentencia z
   15 ciclo_while: WHILE '(' x ')' '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16
    '}'        shift, and go to state 118

    sentencia        go to state 42
    ciclo_for        go to state 20
    ciclo_while      go to state 21
    ins_if           go to state 22
    escapa           go to state 23
    aumento          go to state 24
    decremento       go to state 25
    imprimir         go to state 26
    bloque           go to state 27
    declaracion_var  go to state 28
    asignacion_var   go to state 29
    tipo             go to state 30


State 116

   14 ciclo_for: FOR '(' declaracion_var z x z . aumento ')' '{' lSentencia '}'

    ID         shift, and go to state 119
    INCREMENT  shift, and go to state 11

    aumento  go to state 120


State 117

   16 ins_if: IF '(' x ')' '{' lSentencia '}' .
   17       | IF '(' x ')' '{' lSentencia '}' . ELSE '{' lSentencia '}'
   18       | IF '(' x ')' '{' lSentencia '}' . ELSE ins_if

    ELSE  shift, and go to state 121

    $default  reduce using rule 16 (ins_if)


State 118

   15 ciclo_while: WHILE '(' x ')' '{' lSentencia '}' .

    $default  reduce using rule 15 (ciclo_while)


State 119

   23 aumento: ID . INCREMENT

    INCREMENT  shift, and go to state 31


State 120

   14 ciclo_for: FOR '(' declaracion_var z x z aumento . ')' '{' lSentencia '}'

    ')'  shift, and go to state 122


State 121

   17 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE . '{' lSentencia '}'
   18       | IF '(' x ')' '{' lSentencia '}' ELSE . ins_if

    IF   shift, and go to state 8
    '{'  shift, and go to state 123

    ins_if  go to state 124


State 122

   14 ciclo_for: FOR '(' declaracion_var z x z aumento ')' . '{' lSentencia '}'

    '{'  shift, and go to state 125


State 123

   17 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16

    lSentencia       go to state 126
    sentencia        go to state 19
    ciclo_for        go to state 20
    ciclo_while      go to state 21
    ins_if           go to state 22
    escapa           go to state 23
    aumento          go to state 24
    decremento       go to state 25
    imprimir         go to state 26
    bloque           go to state 27
    declaracion_var  go to state 28
    asignacion_var   go to state 29
    tipo             go to state 30


State 124

   18 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE ins_if .

    $default  reduce using rule 18 (ins_if)


State 125

   14 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16

    lSentencia       go to state 127
    sentencia        go to state 19
    ciclo_for        go to state 20
    ciclo_while      go to state 21
    ins_if           go to state 22
    escapa           go to state 23
    aumento          go to state 24
    decremento       go to state 25
    imprimir         go to state 26
    bloque           go to state 27
    declaracion_var  go to state 28
    asignacion_var   go to state 29
    tipo             go to state 30


State 126

    2 lSentencia: lSentencia . sentencia z
   17 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16
    '}'        shift, and go to state 128

    sentencia        go to state 42
    ciclo_for        go to state 20
    ciclo_while      go to state 21
    ins_if           go to state 22
    escapa           go to state 23
    aumento          go to state 24
    decremento       go to state 25
    imprimir         go to state 26
    bloque           go to state 27
    declaracion_var  go to state 28
    asignacion_var   go to state 29
    tipo             go to state 30


State 127

    2 lSentencia: lSentencia . sentencia z
   14 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    RETORNO    shift, and go to state 13
    BREAK      shift, and go to state 14
    CONTINUE   shift, and go to state 15
    '{'        shift, and go to state 16
    '}'        shift, and go to state 129

    sentencia        go to state 42
    ciclo_for        go to state 20
    ciclo_while      go to state 21
    ins_if           go to state 22
    escapa           go to state 23
    aumento          go to state 24
    decremento       go to state 25
    imprimir         go to state 26
    bloque           go to state 27
    declaracion_var  go to state 28
    asignacion_var   go to state 29
    tipo             go to state 30


State 128

   17 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}' .

    $default  reduce using rule 17 (ins_if)


State 129

   14 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia '}' .

    $default  reduce using rule 14 (ciclo_for)
